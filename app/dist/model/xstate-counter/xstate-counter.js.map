{"version":3,"file":"xstate-counter.js","sourceRoot":"","sources":["../../../src/model/xstate-counter/xstate-counter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAU/C,MAAM,CAAC,MAAM,cAAc,GAAG,aAAa,CAA+B;IACxE,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE;IACrB,MAAM,EAAE;QACN,MAAM,EAAE;YACN,EAAE,EAAE;gBACF,GAAG,EAAE;oBACH,OAAO,EAAE,MAAM,CAAC;wBACd,KAAK,EAAE,GAAG,CAAC,EAAE;4BACX,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAA;wBACtB,CAAC;qBACF,CAAC;iBACH;gBACD,GAAG,EAAE;oBACH,OAAO,EAAE,MAAM,CAAC;wBACd,KAAK,EAAE,GAAG,CAAC,EAAE;4BACX,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAA;wBACtB,CAAC;qBACF,CAAC;iBACH;aACF;SACF;KACF;CACF,CAAC,CAAC","sourcesContent":["import { createMachine, assign } from 'xstate';\r\n\r\ntype CounterEvent =\r\n  { type: 'INC' }\r\n  | { type: 'DEC' };\r\n\r\ninterface counterContext {\r\n  count: number;\r\n}\r\n\r\nexport const counterMachine = createMachine<counterContext, CounterEvent>({\r\n  initial: 'active',\r\n  context: { count: 0 },\r\n  states: {\r\n    active: {\r\n      on: {\r\n        INC: {\r\n          actions: assign({\r\n            count: ctx => {\r\n              return ctx.count + 1\r\n            }\r\n          })\r\n        },\r\n        DEC: {\r\n          actions: assign({\r\n            count: ctx => {\r\n              return ctx.count - 1\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n});"]}